name: Python Validation

on:
  push:
    paths:
      - '**.py'
      - 'requirements*.txt'
      - 'pyproject.toml'
  pull_request:
    paths:
      - '**.py'
      - 'requirements*.txt'
      - 'pyproject.toml'

jobs:
  ci-tools-validation:  
    runs-on: ubuntu-latest
    name: CI-CD Tool Validation  

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install -r requirements-dev.txt
    
    - name: Lint with Ruff
      run: |
        echo "üîç Running Python linting with Ruff..."
        
        lint_failed=false
        
        if ! ruff check --output-format=github; then
          echo "   ‚ùå Python linting failed - check output above"
          lint_failed=true
        else
          echo "   ‚úÖ All python files successfully passed linting"
        fi
        
        # Store linting result for final summary
        echo "LINT_VALIDATION_FAILED=$lint_failed" >> $GITHUB_ENV
        
        if [ "$lint_failed" = true ]; then
          echo "::error::Python linting validation failed"
        fi
    
    - name: Test Python
      run: |
        echo "üß™ Running Python tests..."
        
        test_failed=false
        
        if ! pytest --junitxml=junit/test-results.xml; then
          echo "   ‚ùå Python tests failed - check output above"
          test_failed=true
        else
          echo "   ‚úÖ All Python tests passed successfully"
        fi
        
        # Store test result for final summary
        echo "TEST_VALIDATION_FAILED=$test_failed" >> $GITHUB_ENV
        
        if [ "$test_failed" = true ]; then
          echo "::error::Python test validation failed"
        fi

    - name: Validation Summary
      if: always()
      run: |
        echo "üìã Python Validation Summary:"
        
        overall_failed=false
        
        # Check each validation result
        if [ "$LINT_VALIDATION_FAILED" = "true" ]; then
          echo "  ‚ùå Python linting validation"
          overall_failed=true
        else
          echo "  ‚úÖ Python linting validation"
        fi
        
        if [ "$TEST_VALIDATION_FAILED" = "true" ]; then
          echo "  ‚ùå Python test validation"
          overall_failed=true
        else
          echo "  ‚úÖ Python test validation"
        fi
        
        echo ""
        if [ "$overall_failed" = "true" ]; then
          echo "üí• One or more Python validations failed. Please review the errors above."
          echo "::error::Python validation failed - see summary above"
          exit 1
        else
          echo "üéâ All secure-ai-tooling python validations completed successfully!"
          echo "The secure-ai-tooling repository maintains full integrity and consistency."
        fi
